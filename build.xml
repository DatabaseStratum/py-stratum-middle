<project name="PyStratum" default="build" basedir=".">
    <taskdef name="readSemanticVersion" classname="vendor.setbased.phing-extensions.src.Task.ReadSemanticVersionTask"/>
    <property name="BUILD_DIR" value="./build"/>

    <!-- Run composer update and executes various other updates -->
    <target name="composer-update">
        <exec command="composer update" checkreturn="true" passthru="true"/>
    </target>

    <!-- Install virtual environment -->
    <target name="venv">
        <delete dir="venv" quiet="true"/>
        <delete file="poetry.lock" quiet="true"/>
        <exec command="python3 -m venv venv" checkreturn="true" passthru="true"/>
        <exec command="./venv/bin/python -m pip install --upgrade pip" checkreturn="true" passthru="true"/>
        <exec command="./venv/bin/python -m pip install --upgrade poetry" checkreturn="true" passthru="true"/>
        <exec command="./venv/bin/poetry install --no-root" passthru="true" checkreturn="true"/>
    </target>

    <!-- Creates a new version/release. -->
    <!-- @todo replace semantic version with pep-396 -->
    <target name="version">
        <readSemanticVersion file=".version"
                             versionProperty="VERSION"
                             haltOnError="true"/>
        <reflexive>
            <fileset dir=".">
                <include name="pyproject.toml"/>
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="version = .*" replace="version= &quot;${VERSION}&quot;"/>
                </replaceregexp>
            </filterchain>
        </reflexive>
        <gitcommit repository="." message="Release: ${VERSION}" allFiles="true"/>
        <gitpush repository="."/>
        <gittag repository="." name="${VERSION}"/>
        <gitpush repository="." refspec="${VERSION}" quiet="false"/>
    </target>

    <!-- Creates a new distribution using pyproject.toml -->
    <target name="dist">
        <exec command="./venv/bin/poetry build" passthru="true" checkreturn="true"/>
    </target>

    <!-- Uploads a distribution to PyPI -->
    <target name="upload">
        <exec command="./venv/bin/poetry publish" passthru="true" checkreturn="true"/>
    </target>

    <!-- All steps for releasing a new version -->
    <target name="release" depends="version,dist,upload"/>

    <!-- Generates the API documentation -->
    <target name="apidoc">
        <delete includeemptydirs="true" verbose="false" failonerror="true">
            <fileset dir="source">
                <include name="**"/>
                <exclude name="conf.py"/>
                <exclude name="index.rst"/>
                <exclude name="Makefile"/>
                <exclude name="modules.rst"/>
                <exclude name="_static"/>
            </fileset>
        </delete>
        <exec command="sphinx-apidoc-3 -f pystratum/ -d 4 -e -P -o source/" passthru="true" checkreturn="true"/>
        <exec command="sphinx-build-3 -b html -d build/doctrees source build/html" passthru="true" checkreturn="true"/>
    </target>

    <!-- Default target -->
    <target name="build">
        <echo msg="And Now for Something Completely Different"/>
    </target>
</project>
